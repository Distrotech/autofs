Bottom: 8187fc685f7a3aa4d0eb5d2235d301456b916cd9
Top:    9c2578218d5713bd21174f5f34ee079f446d3e4d
Author: Ian Kent <ikent@redhat.com>
Date:   2013-04-04 15:52:45 +0800

Refresh of autofs-5.0.7-syncronize-handle_mounts-shutdown.patch

---

diff --git a/daemon/automount.c b/daemon/automount.c
index 32862b8..5cd9d9a 100644
--- a/daemon/automount.c
+++ b/daemon/automount.c
@@ -1481,6 +1481,7 @@ static void handle_mounts_finish(void)
 	/* Poke signal handler */
 	pthread_kill(state_mach_thid, SIGTERM);
 	finish_cond_wait();
+	fc.busy--;
 	error(LOGOPT_ANY, "after wait fc.busy %d", fc.busy);
 	finish_mutex_unlock();
 
diff --git a/lib/master.c b/lib/master.c
index 0a3725e..739ea8f 100644
--- a/lib/master.c
+++ b/lib/master.c
@@ -1400,31 +1400,36 @@ void master_finish(struct master *master)
 	struct master_mapent *entry;
 	int status;
 
+again:
 	finish_mutex_lock();
 
-	error(LOGOPT_ANY, "before fc.busy %d", fc.busy);
-
-	while (fc.busy) {
-		head = &master->completed;
-		p = head->next;
-		while (p != head) {
-			entry = list_entry(p, struct master_mapent, join);
-			p = p->next;
-			list_del(&entry->join);
-			pthread_join(entry->thid, NULL);
-			master_free_mapent_sources(entry, 1);
-			master_free_mapent(entry);
-			fc.busy--;
-		}
+	if (!fc.busy) {
+		finish_mutex_unlock();
+		return;
 	}
 
-	error(LOGOPT_ANY, "after fc.busy %d", fc.busy);
+	error(LOGOPT_ANY, "before broadcast fc.busy %d", fc.busy);
+
+	head = &master->completed;
+	p = head->next;
+	while (p != head) {
+		entry = list_entry(p, struct master_mapent, join);
+		p = p->next;
+		list_del(&entry->join);
+		master_free_mapent_sources(entry, 1);
+		master_free_mapent(entry);
+	}
 
 	status = pthread_cond_broadcast(&fc);
 	if (status)
 		fatal(status);
 
 	finish_mutex_unlock();
+
+	/*finish_mutex_lock();
+	error(LOGOPT_ANY, "after broadcast fc.busy %d", fc.busy);
+	finish_mutex_unlock();*/
+	goto again;
 }
 
 inline unsigned int master_get_logopt(void)
