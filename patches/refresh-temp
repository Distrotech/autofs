Bottom: ef9c1d416a99aa9eb3aea2c3c497e96bb16f0712
Top:    834d7f09457992c45c73188a3836b72304bead0b
Author: Ian Kent <raven@themaw.net>
Date:   2013-02-27 12:45:39 +0800

Refresh of autofs-5.0.7-add-symlink-pseudo-option.patch

---

diff --git a/modules/mount_bind.c b/modules/mount_bind.c
index c5ac340..4975294 100644
--- a/modules/mount_bind.c
+++ b/modules/mount_bind.c
@@ -73,7 +73,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 	char buf[MAX_ERR_BUF];
 	int err;
 	int i, len;
-	int symlink = (*name != '/' && (ap->flags & MOUNT_FLAG_SYMLINK));
+	int symlnk = (*name != '/' && (ap->flags & MOUNT_FLAG_SYMLINK));
 
 	if (ap->flags & MOUNT_FLAG_REMOUNT)
 		return 0;
@@ -81,7 +81,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 	/* Extract "symlink" pseudo-option which forces local filesystems
 	 * to be symlinked instead of bound.
 	 */
-	if (*name != '/' && !symlink && options) {
+	if (*name != '/' && !symlnk && options) {
 		const char *comma;
 		int o_len = strlen(options) + 1;
 
@@ -107,7 +107,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 
 			o_len = end - cp + 1;
 			if (strncmp("symlink", cp, o_len) == 0)
-				symlink = 1;
+				symlnk = 1;
 		}
 	}
 
@@ -134,7 +134,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 	if (options == NULL || *options == '\0')
 		options = "defaults";
 
-	if (!symlink && bind_works) {
+	if (!symlnk && bind_works) {
 		int status, existed = 1;
 
 		debug(ap->logopt, MODPREFIX "calling mkdir_path %s", fullpath);
