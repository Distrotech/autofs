Bottom: 3a7f70c8f9b38229a5c04063ad5ead2eaa940b93
Top:    076b8753ddab5823017da8f6c5ed6d3ff24fbfe1
Author: Ian Kent <raven@themaw.net>
Date:   2013-02-27 11:09:52 +0800

Refresh of autofs-5.0.7-add-symlink-pseudo-option.patch

---

diff --git a/include/automount.h b/include/automount.h
index a8fe305..e72fa0d 100644
--- a/include/automount.h
+++ b/include/automount.h
@@ -452,12 +452,12 @@ struct kernel_mod_version {
 /* Use server weight only for selection */
 #define MOUNT_FLAG_USE_WEIGHT_ONLY	0x0010
 
-/* Use symlinks instead of bind mounting local mounts */
-#define MOUNT_FLAG_SYMLINK		0x0020
-
 /* Don't use bind mounts even when system supports them */
 #define MOUNT_FLAG_NOBIND		0x0020
 
+/* Use symlinks instead of bind mounting local mounts */
+#define MOUNT_FLAG_SYMLINK		0x0040
+
 struct autofs_point {
 	pthread_t thid;
 	char *path;			/* Mount point name */
diff --git a/man/auto.master.5.in b/man/auto.master.5.in
index d0d582c..bbea43a 100644
--- a/man/auto.master.5.in
+++ b/man/auto.master.5.in
@@ -163,8 +163,9 @@ systems can also be prevented for specific map entrys by adding the
 This option makes bind mounting use a symlink instead of an actual bind
 mount. It is an autofs specific option that is a pseudo mount option and
 so is given without a leading dash. It may be used with indirect map
-entries either in the master map (so it effects all map entries) or with
-individual map entries.
+entries only, either in the master map (so it effects all map entries)
+or with individual map entries. The option is ignored for direct mounts
+and non-root offest mount entries.
 .TP
 .I "\-r, \-\-random-multimount-selection"
 Enables the use of ramdom selection when choosing a host from a
diff --git a/modules/mount_bind.c b/modules/mount_bind.c
index 129e24a..c5ac340 100644
--- a/modules/mount_bind.c
+++ b/modules/mount_bind.c
@@ -73,7 +73,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 	char buf[MAX_ERR_BUF];
 	int err;
 	int i, len;
-	int symlink = ap->flags & MOUNT_FLAG_SYMLINK;
+	int symlink = (*name != '/' && (ap->flags & MOUNT_FLAG_SYMLINK));
 
 	if (ap->flags & MOUNT_FLAG_REMOUNT)
 		return 0;
@@ -81,7 +81,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 	/* Extract "symlink" pseudo-option which forces local filesystems
 	 * to be symlinked instead of bound.
 	 */
-	if (!symlink && options) {
+	if (*name != '/' && !symlink && options) {
 		const char *comma;
 		int o_len = strlen(options) + 1;
