Bottom: 4acfa48b8a5ab88dad4c4c7623d7970ef1565619
Top:    417ee73716ca5a344c2c981792b9bd105687b9e0
Author: Ian Kent <raven@themaw.net>
Date:   2013-08-03 09:52:50 +0800

Refresh of autofs-5.0.7-fix-fix-wildcard-multi-map-regression.patch

---

diff --git a/modules/lookup_file.c b/modules/lookup_file.c
index 6abf5df..83ef048 100644
--- a/modules/lookup_file.c
+++ b/modules/lookup_file.c
@@ -1042,7 +1042,7 @@ int lookup_mount(struct autofs_point *ap, const char *name, int name_len, void *
 			return NSS_STATUS_UNAVAIL;
 		}
 
-		cache_writelock(mc);
+		cache_readlock(mc);
 		me = cache_lookup_first(mc);
 		if (me && st.st_mtime <= me->age) {
 			/*
@@ -1116,8 +1116,8 @@ do_cache_lookup:
 		 * If this is a lookup add wildcard match for later validation
 		 * checks and negative cache lookups.
 		 */
-		if (ap->type == LKP_INDIRECT && *me->key == '*' &&
-		   !(ap->flags & MOUNT_FLAG_REMOUNT)) {
+		if (!(ap->flags & MOUNT_FLAG_REMOUNT) &&
+		    ap->type == LKP_INDIRECT && *me->key == '*') {
 			ret = cache_update(mc, source, key, me->mapent, me->age);
 			if (!(ret & (CHE_OK | CHE_UPDATED)))
 				me = NULL;
diff --git a/modules/lookup_ldap.c b/modules/lookup_ldap.c
index 7695fc2..2ab1e8c 100644
--- a/modules/lookup_ldap.c
+++ b/modules/lookup_ldap.c
@@ -3042,8 +3042,8 @@ int lookup_mount(struct autofs_point *ap, const char *name, int name_len, void *
 		 * If this is a lookup add wildcard match for later validation
 		 * checks and negative cache lookups.
 		 */
-		if (ap->type == LKP_INDIRECT && *me->key == '*' &&
-		   !(ap->flags & MOUNT_FLAG_REMOUNT)) {
+		if (!(ap->flags & MOUNT_FLAG_REMOUNT) &&
+		    ap->type == LKP_INDIRECT && *me->key == '*') {
 			ret = cache_update(mc, source, key, me->mapent, me->age);
 			if (!(ret & (CHE_OK | CHE_UPDATED)))
 				me = NULL;
diff --git a/modules/lookup_nisplus.c b/modules/lookup_nisplus.c
index 4f31d26..08878bb 100644
--- a/modules/lookup_nisplus.c
+++ b/modules/lookup_nisplus.c
@@ -587,8 +587,8 @@ int lookup_mount(struct autofs_point *ap, const char *name, int name_len, void *
 		 * If this is a lookup add wildcard match for later validation
 		 * checks and negative cache lookups.
 		 */
-		if (ap->type == LKP_INDIRECT && *me->key == '*' &&
-		   !(ap->flags & MOUNT_FLAG_REMOUNT)) {
+		if (!(ap->flags & MOUNT_FLAG_REMOUNT) &&
+		    ap->type == LKP_INDIRECT && *me->key == '*') {
 			ret = cache_update(mc, source, key, me->mapent, me->age);
 			if (!(ret & (CHE_OK | CHE_UPDATED)))
 				me = NULL;
