Bottom: c6d176024c6ceb1ea5cdbc3bcfe222fb61b39e8f
Top:    d6ac2289056f6725cfb2706b77434acd12704c49
Author: Ian Kent <ikent@redhat.com>
Date:   2013-04-04 15:30:01 +0800

Refresh of autofs-5.0.7-syncronize-handle_mounts-shutdown.patch

---

diff --git a/daemon/automount.c b/daemon/automount.c
index a88eef3..32862b8 100644
--- a/daemon/automount.c
+++ b/daemon/automount.c
@@ -1477,9 +1477,11 @@ static void handle_mounts_finish(void)
 
 	finish_mutex_lock();
 	fc.busy++;
+	error(LOGOPT_ANY, "before signal fc.busy %d", fc.busy);
 	/* Poke signal handler */
 	pthread_kill(state_mach_thid, SIGTERM);
 	finish_cond_wait();
+	error(LOGOPT_ANY, "after wait fc.busy %d", fc.busy);
 	finish_mutex_unlock();
 
 	pthread_setcancelstate(cancel_state, NULL);
diff --git a/lib/master.c b/lib/master.c
index 07b08e3..302668a 100644
--- a/lib/master.c
+++ b/lib/master.c
@@ -1402,6 +1402,8 @@ void master_finish(struct master *master)
 
 	finish_mutex_lock();
 
+	error(LOGOPT_ANY, "before fc.busy %d", fc.busy);
+
 	while (fc.busy) {
 		head = &master->completed;
 		p = head->next;
@@ -1416,6 +1418,8 @@ void master_finish(struct master *master)
 		}
 	}
 
+	error(LOGOPT_ANY, "after fc.busy %d", fc.busy);
+
 	status = pthread_cond_broadcast(&fc);
 	if (status)
 		fatal(status);
