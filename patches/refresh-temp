Bottom: f600af05289e413bef6b724a0bc9235a09d6aa47
Top:    b8a7cb05234d7d403c51e317068e41c7c1862803
Author: Ian Kent <raven@themaw.net>
Date:   2013-08-16 15:10:20 +0800

Refresh of autofs-5.0.7-only-prove-specific-nfs-version-if-requested.patch

---

diff --git a/modules/mount_nfs.c b/modules/mount_nfs.c
index adf2002..ab664c7 100644
--- a/modules/mount_nfs.c
+++ b/modules/mount_nfs.c
@@ -54,6 +54,19 @@ int mount_init(void **context)
 	return !mount_bind;
 }
 
+unsigned int set_nfs_vers(const char *fstype)
+{
+	unsigned int mount_default_proto = defaults_get_mount_nfs_default_proto();
+	unsigned int vers = NFS_VERS_MASK | NFS_PROTO_MASK;
+
+	if (strcmp(fstype, "nfs4") == 0)
+		vers = NFS4_VERS_MASK | TCP_SUPPORTED;
+	else if (mount_default_proto == 4)
+		vers = vers | NFS4_VERS_MASK;
+
+	return vers;
+}
+
 int mount_mount(struct autofs_point *ap, const char *root, const char *name, int name_len,
 		const char *what, const char *fstype, const char *options,
 		void *context)
@@ -61,7 +74,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 	char fullpath[PATH_MAX];
 	char buf[MAX_ERR_BUF];
 	struct host *this, *hosts = NULL;
-	unsigned int mount_default_proto, vers;
+	unsigned int vers;
 	char *nfsoptions = NULL;
 	const char *port_opt = NULL;
 	unsigned int flags = ap->flags &
@@ -80,12 +93,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 	      MODPREFIX "root=%s name=%s what=%s, fstype=%s, options=%s",
 	      root, name, what, fstype, options);
 
-	mount_default_proto = defaults_get_mount_nfs_default_proto();
-	vers = NFS_VERS_MASK | NFS_PROTO_MASK;
-	if (strcmp(fstype, "nfs4") == 0)
-		vers = NFS4_VERS_MASK | TCP_SUPPORTED;
-	else if (mount_default_proto == 4)
-		vers = vers | NFS4_VERS_MASK;
+	vers = set_nfs_vers(fstype);
 
 	/* Extract "nosymlink" pseudo-option which stops local filesystems
 	 * from being symlinked.
@@ -146,7 +154,15 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name, int
 				if (strncmp("vers=4", cp, o_len) == 0 ||
 				    strncmp("nfsvers=4", cp, o_len) == 0)
 					vers = NFS4_VERS_MASK | TCP_SUPPORTED;
-				else if (strstr(cp, "port=") == cp &&
+				else if (strncmp("vers=3", cp, o_len) == 0 ||
+					 strncmp("nfsvers=3", cp, o_len) == 0) {
+					vers &= ~NFS4_VERS_MASK;
+					vers = (NFS3_REQUESTED & ~NFS_VERS_MASK);
+				} else if (strncmp("vers=2", cp, o_len) == 0 ||
+					 strncmp("nfsvers=2", cp, o_len) == 0) {
+					vers &= ~NFS4_VERS_MASK;
+					vers |= (NFS2_REQUESTED & ~NFS_VERS_MASK);
+				} else if (strstr(cp, "port=") == cp &&
 					 o_len - 5 < 25) {
 					char optport[25];
