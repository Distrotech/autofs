Bottom: 7b47c02544f2531a547bed3ca22a72ae5b35e57d
Top:    012a6ebc68d401fb1deb19be2ca59a106affadcd
Author: Ian Kent <raven@themaw.net>
Date:   2013-07-30 15:38:36 +0800

Refresh of autofs-5.0.7-add-dumpmap-to-file.patch

---

diff --git a/daemon/automount.c b/daemon/automount.c
index 0aec6e1..52a7956 100644
--- a/daemon/automount.c
+++ b/daemon/automount.c
@@ -1948,7 +1948,7 @@ int main(int argc, char *argv[])
 		{"foreground", 0, 0, 'f'},
 		{"random-multimount-selection", 0, 0, 'r'},
 		{"negative-timeout", 1, 0, 'n'},
-		{"dumpmaps", 1, 0, 'm'},
+		{"dumpmaps", 2, 0, 'm'},
 		{"global-options", 1, 0, 'O'},
 		{"version", 0, 0, 'V'},
 		{"set-log-priority", 1, 0, 'l'},
diff --git a/lib/master.c b/lib/master.c
index da01e7f..75dbca0 100644
--- a/lib/master.c
+++ b/lib/master.c
@@ -1328,7 +1328,7 @@ static char *match_map_path(const char *match, const char *maps)
 
 fail:
 	if (!found)
-		printf("map \"%s\" not found in \"%s\", ignored\n",
+		printf("map \"%s\" not found in \"%s\", not output\n",
 			match, maps);
 	else {
 		printf("failed to allocate working storage,\n");
@@ -1344,17 +1344,23 @@ static void write_map(const char *map, struct mapent *first)
 	char *name, *out;
 	FILE *f;
 
+	/* map has no name (eg. hosts) */
+	if (!map) {
+		printf("  map has no name, not output\n");
+		return;
+	}
+
 	name = strdup(map);
 	if (!name) {
-		printf("failed to allocate working storage, "
-			"map %s not output\n", map);
+		printf("  failed to allocate working storage, "
+		       "map %s not output\n", map);
 		return;
 	}
 
 	if (strchr(name, '/'))
-		out = name;
-	else
 		out = basename(name);
+	else
+		out = name;
 
 	f = open_fopen_wx(out);
 	if (!f) {
@@ -1369,6 +1375,8 @@ static void write_map(const char *map, struct mapent *first)
 		fprintf(f, "%s\t%s\n", me->key, me->mapent);
 	} while ((me = cache_lookup_next(first->mc, me)));
 
+	printf("  output map %s\n", out);
+
 	fclose(f);
 	free(name);
 
@@ -1480,18 +1488,17 @@ int master_show_mounts(struct master *master, const char *maps)
 				}
 			}
 
-			printf("\n");
-
 			me = cache_lookup_first(source->mc);
 			if (!me)
 				printf("  no keys found in map\n");
 			else {
 				if (map_path) {
 					write_map(source->argv[0], me);
-					free(name);
 					goto next;
 				}
 
+				printf("\n");
+
 				do {
 					printf("  %s | %s\n", me->key, me->mapent);
 				} while ((me = cache_lookup_next(source->mc, me)));
