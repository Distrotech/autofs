Bottom: 32bf53139fbe620aee0e9a45ffd6b9e46f950459
Top:    ff0270577ff38104705eb4bc16df86b7c5232666
Author: Ian Kent <raven@themaw.net>
Date:   2013-08-19 14:13:34 +0800

Refresh of autofs-5.0.7-allow-use-of-hosts-map-in-maps.patch

---

diff --git a/modules/mount_autofs.c b/modules/mount_autofs.c
index 02332dd..4f68ea6 100644
--- a/modules/mount_autofs.c
+++ b/modules/mount_autofs.c
@@ -62,6 +62,7 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name,
 	char buf[MAX_ERR_BUF];
 	char *options, *p;
 	int len, ret;
+	int hosts = 0;
 
 	/* Root offset of multi-mount */
 	len = strlen(root);
@@ -123,6 +124,8 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name,
 				ghost = 1;
 			else if (strncmp(cp, "symlink", 7) == 0)
 				symlnk = 1;
+			else if (strncmp(cp, "hosts", 5) == 0)
+				hosts = 1;
 			else if (strncmp(cp, "timeout=", 8) == 0) {
 				char *val = strchr(cp, '=');
 				unsigned tout;
@@ -164,7 +167,10 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name,
 	if (symlnk)
 		nap->flags |= MOUNT_FLAG_SYMLINK;
 
-	argc = 1;
+	if (hosts)
+		argc = 0;
+	else
+		argc = 1;
 
 	if (options) {
 		char *t = options;
@@ -176,7 +182,10 @@ int mount_mount(struct autofs_point *ap, const char *root, const char *name,
 	}
 	argv = (const char **) alloca((argc + 1) * sizeof(char *));
 
-	argc = 1;
+	if (hosts)
+		argc = 0;
+	else
+		argc = 1;
 
 	/*
 	 * If a mount of a hosts map is being requested it will come
