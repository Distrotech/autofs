Bottom: 04e5031e8764b2eb4a5f7bceb248d99ffe1caa01
Top:    3426785981f865dc95be8e9f12d58b09d1b1a5f2
Author: Ian Kent <raven@themaw.net>
Date:   2013-07-30 17:51:17 +0800

Refresh of autofs-5.0.7-add-dumpmap-to-file.patch

---

diff --git a/lib/master.c b/lib/master.c
index 175ecad..4b26a6f 100644
--- a/lib/master.c
+++ b/lib/master.c
@@ -1365,10 +1365,9 @@ static char *match_map_path(const char *match, const char *maps)
 	return 1;
 }
 
-static void write_map(struct map_source *source, struct mapent *first)
+static void write_map(const char *map, struct mapent *first)
 {
 	struct mapent *me = first;
-	const char *map = source->argv[0];
 	char *name, *out;
 	FILE *f;
 
@@ -1403,10 +1402,7 @@ static void write_map(struct map_source *source, struct mapent *first)
 		fprintf(f, "%s\t%s\n", me->key, me->mapent);
 	} while ((me = cache_lookup_next(first->mc, me)));
 
-	if (source->type && !strcmp(source->type, "multi"))
-		printf("  output merged multi map to %s\n", out);
-	else
-		printf("  output map %s\n", out);
+	printf("  output map %s\n", out);
 
 	fclose(f);
 	free(name);
@@ -1414,6 +1410,37 @@ static void write_map(struct map_source *source, struct mapent *first)
 	return;
 }
 
+static void write_maps(struct map_source *source, struct mapent *first)
+{
+	int argc = source->argc;
+	int i;
+
+	for (i = 0; i < argc; i++) {
+		if (source->argv[i] && *source->argv[i] != '-') {
+			write_map(source->argv[i], first);
+			i++;
+		}
+
+		if (i >= argc)
+			return;
+
+		/* Look for next map */
+		if (!strcmp(source->argv[i], "--"))
+			continue;
+
+		/* Skip over arguments */
+		if (source->argv[i]) {
+			for (j = i; j < source->argc; j++) {
+				if (!strcmp(source->argv[j], "--"))
+					break;
+				i++;
+			}
+		}
+	}
+
+	return;
+}
+
 int master_show_mounts(struct master *master, const char *maps)
 {
 	struct list_head *p, *head;
@@ -1510,7 +1537,7 @@ int master_show_mounts(struct master *master, const char *maps)
 				printf("  no keys found in map\n");
 			else {
 				if (matched) {
-					write_map(source, me);
+					write_maps(source, me);
 					goto next;
 				}
