Bottom: 7e378d5d514ce455f6abbb773533f8f585a9b0e8
Top:    d015f6ec028734c73e0849ae78907b6598975ec6
Author: Ian Kent <raven@themaw.net>
Date:   2013-07-30 16:56:35 +0800

Refresh of autofs-5.0.7-fix-dumpmaps-multi-output.patch

---

diff --git a/lib/master.c b/lib/master.c
index 49d4691..efed3ba 100644
--- a/lib/master.c
+++ b/lib/master.c
@@ -1283,18 +1283,43 @@ static void list_source_instances(struct map_source *source, struct map_source *
 
 static void print_map_info(struct map_source *source)
 {
-	int i = 0;
+	int argc = source->argc;
+	int i, multi, map_num;
+
+	multi = (source->type && strcmp(source->type, "multi"));
+	map_num = 1;
+	for (i = 0; i < argc; i++) {
+		if (source->argv[i] && *source->argv[i] != '-') {
+			if (!multi)
+				printf("  map: %s\n", source->argv[i]);
+			else {
+				printf("  map[%i]: %s\n", map_num, source->argv[i]);
+				map_num++;
+			}
+			i++;
+		}
 
-	if (source->argv[0] && *source->argv[0] != '-') {
-		printf("  map: %s\n", source->argv[0]);
-		i = 1;
-	}
+		if (i >= argc)
+			return;
 
-	if (source->argc > 1) {
-		printf("  arguments: ");
-		for (; i < source->argc; i++)
-			printf("%s ", source->argv[i]);
-		printf("\n");
+		if (strcmp(source->argv[i], "--"))
+			continue;
+
+		if (source->argv[i]) {
+			int need_newline = 0;
+			int j;
+
+			printf("  arguments:");
+			for (j = i; j < source->argc; j++) {
+				if (!strcmp(source->argv[j], "--"))
+					break;
+				printf(" %s", source->argv[j]);
+				i++;
+				need_newline = 1;
+			}
+			if (need_newline)
+				printf("\n");
+		}
 	}
 
 	return;
@@ -1376,7 +1401,7 @@ int master_show_mounts(struct master *master)
 			}
 
 			if (source->argc >= 1) {
-				output_map_info(source);
+				print_map_info(source);
 				if (count && ap->type == LKP_INDIRECT)
 					printf("  duplicate indirect map entry"
 					       " will be ignored at run time\n");
