Bottom: 5433c6da2185e1949cc787b098ebd18bb2bf5355
Top:    93a37342f9ffc0c764c93e4e06dd84960dfe45c7
Author: Ian Kent <raven@themaw.net>
Date:   2013-07-30 13:29:56 +0800

Refresh of autofs-5.0.7-add-dumpmap-to-file.patch

---

diff --git a/include/automount.h b/include/automount.h
index 71787a5..c2d39f9 100644
--- a/include/automount.h
+++ b/include/automount.h
@@ -643,6 +643,26 @@ static inline FILE *open_fopen_r(const char *path)
 	return f;
 }
 
+static inline FILE *open_fopen_wx(const char *path)
+{
+	FILE *f;
+
+#if defined(O_CLOEXEC) && defined(SOCK_CLOEXEC)
+	if (cloexec_works != -1) {
+		f = fopen(fd, "wxe");
+		if (f != NULL) {
+			check_cloexec(fileno(f));
+			return f;
+		}
+	}
+#endif
+	f = fopen(path, "wx");
+	if (f == NULL)
+		return NULL;
+	check_cloexec(fileno(f));
+	return f;
+}
+
 static inline FILE *open_setmntent_r(const char *table)
 {
 	FILE *tab;
diff --git a/lib/master.c b/lib/master.c
index 081e3cb..96f2681 100644
--- a/lib/master.c
+++ b/lib/master.c
@@ -1337,6 +1337,28 @@ fail:
 	return NULL;
 }
 
+static void write_map(char *name, struct mapent *first)
+{
+	struct mapent *me = first;
+	FILE *f;
+
+	f = open_fopen_wx(name);
+	if (!f) {
+		printf("  failed to open output file %s: %s\n",
+			name, strerror(errno));
+		printf("  map file not created.\n")
+		return;
+	}
+ 
+	do {
+		fprintf(f, "%s\t%s\n", me->key, me->mapent);
+	} while ((me = cache_lookup_next(first->mc, me)));
+
+	fclose(f);
+
+	return;
+}
+
 int master_show_mounts(struct master *master, const char *maps)
 {
 	struct list_head *p, *head;
@@ -1379,8 +1401,10 @@ int master_show_mounts(struct master *master, const char *maps)
 
 		if (maps) {
 			match_name = match_map_name(ap->path, maps);
-			if (!match_name)
+			if (!match_name) {
+				printf("\n");
 				continue;
+			}
 		}
 
 		printf("\nsource(s):\n");
