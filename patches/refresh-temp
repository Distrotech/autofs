Bottom: f94c26248d74733b62cff57e63bf84ae958ef7c3
Top:    5a0fcc281f94f30c7502a5b1a6e15d89cd8e5e85
Author: Ian Kent <ikent@redhat.com>
Date:   2013-09-23 17:02:09 +0800

Refresh of debug.patch

---

diff --git a/lib/rpc_subs.c b/lib/rpc_subs.c
index 2139813..37d7320 100644
--- a/lib/rpc_subs.c
+++ b/lib/rpc_subs.c
@@ -337,14 +337,16 @@ static rpcprog_t rpc_getrpcbyname(const rpcprog_t program)
 		"rpcbind", "portmap", "portmapper", "sunrpc", NULL,
 	};
 	struct rpcent *entry;
+	rpcprog_t prog_number;
 	unsigned int i;
 
 	pthread_mutex_lock(&rpcb_mutex);
 	for (i = 0; rpcb_pgmtbl[i] != NULL; i++) {
 		entry = getrpcbyname(rpcb_pgmtbl[i]);
 		if (entry) {
+			prog_number = entry->r_number;
 			pthread_mutex_unlock(&rpcb_mutex);
-			return (rpcprog_t) entry->r_number;
+			return prog_number;
 		}
 	}
 	pthread_mutex_unlock(&rpcb_mutex);
@@ -359,16 +361,23 @@ static unsigned short rpc_getrpcbport(const int proto)
 		"rpcbind", "portmapper", "sunrpc", NULL,
 	};
 	struct servent *entry;
+	struct protent *p_ent;
+	unsigned short port;
 	unsigned int i;
 
 	pthread_mutex_lock(&rpcb_mutex);
+	p_ent = getprotobynumber(proto);
+	if (!p_ent)
+		goto done;
 	for (i = 0; rpcb_netnametbl[i] != NULL; i++) {
-		entry = getservbyname(rpcb_netnametbl[i], proto);
+		entry = getservbyname(rpcb_netnametbl[i], p_ent->p_name);
 		if (entry) {
+			port = entry->s_port;
 			pthread_mutex_unlock(&rpcb_mutex);
-			return (unsigned short) entry->s_port;
+			return port;
 		}
 	}
+done:
 	pthread_mutex_unlock(&rpcb_mutex);
 #endif
 	return (unsigned short) PMAPPORT;
