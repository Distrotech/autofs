Bottom: 57c49bb54c28ffd41da0b641c52c54a95e397ab5
Top:    ecc9ecc78540c6d88ebe3cf1a28cb6218d094387
Author: Ian Kent <raven@themaw.net>
Date:   2013-05-02 14:37:41 +0800

autofs-5.0.7 - use MS_UNBINDABLE


---

diff --git a/daemon/direct.c b/daemon/direct.c
index 228a666..ffa4580 100644
--- a/daemon/direct.c
+++ b/daemon/direct.c
@@ -31,13 +31,14 @@
 #include <sys/stat.h>
 #include <sys/time.h>
 #include <sys/poll.h>
-#include <sys/mount.h>
 #include <sys/vfs.h>
 #include <sched.h>
 
 #define INCLUDE_PENDING_FUNCTIONS
 #include "automount.h"
 
+extern unsigned long mountflags;
+
 /* Attribute to create detached thread */
 extern pthread_attr_t th_attr_detached;
 
@@ -420,7 +421,7 @@ int do_mount_autofs_direct(struct autofs_point *ap,
 
 	map_name = me->mc->map->argv[0];
 
-	ret = mount(map_name, me->key, "autofs", MS_MGC_VAL, mp->options);
+	ret = mount(map_name, me->key, "autofs", mountflags, mp->options);
 	if (ret) {
 		crit(ap->logopt, "failed to mount autofs path %s", me->key);
 		goto out_err;
@@ -768,7 +769,7 @@ int mount_autofs_offset(struct autofs_point *ap, struct mapent *me, const char *
 	if (!type || strcmp(ap->entry->maps->type, "hosts"))
 		map_name = me->mc->map->argv[0];
 
-	ret = mount(map_name, mountpoint, "autofs", MS_MGC_VAL, mp->options);
+	ret = mount(map_name, mountpoint, "autofs", mountflags, mp->options);
 	if (ret) {
 		crit(ap->logopt,
 		     "failed to mount offset trigger %s at %s",
diff --git a/daemon/indirect.c b/daemon/indirect.c
index f4476dc..b0ce508 100644
--- a/daemon/indirect.c
+++ b/daemon/indirect.c
@@ -30,13 +30,14 @@
 #include <sys/wait.h>
 #include <sys/stat.h>
 #include <sys/time.h>
-#include <sys/mount.h>
 #include <sys/vfs.h>
 #include <sched.h>
 
 #define INCLUDE_PENDING_FUNCTIONS
 #include "automount.h"
 
+extern unsigned long mountflags;
+
 /* Attribute to create detached thread */
 extern pthread_attr_t th_attr_detached;
 
@@ -146,7 +147,7 @@ static int do_mount_autofs_indirect(struct autofs_point *ap, const char *root)
 	if (!type || strcmp(ap->entry->maps->type, "hosts"))
 		map_name = ap->entry->maps->argv[0];
 
-	ret = mount(map_name, root, "autofs", MS_MGC_VAL, options);
+	ret = mount(map_name, root, "autofs", mountflags, options);
 	if (ret) {
 		crit(ap->logopt,
 		     "failed to mount autofs path %s at %s", ap->path, root);
diff --git a/daemon/spawn.c b/daemon/spawn.c
index 3b4a009..0f7d56a 100644
--- a/daemon/spawn.c
+++ b/daemon/spawn.c
@@ -24,7 +24,6 @@
 #include <poll.h>
 #include <sys/wait.h>
 #include <sys/stat.h>
-#include <sys/mount.h>
 
 #include "automount.h"
 
diff --git a/include/automount.h b/include/automount.h
index e72fa0d..40481f0 100644
--- a/include/automount.h
+++ b/include/automount.h
@@ -19,6 +19,7 @@
 #include <unistd.h>
 #include <fcntl.h>
 #include <mntent.h>
+#include <sys/mount.h>
 #include "config.h"
 #include "list.h"
 
@@ -75,6 +76,10 @@ int load_autofs4_module(void);
 #define SMB_SUPER_MAGIC    0x0000517BL
 #define CIFS_MAGIC_NUMBER  0xFF534D42L
 
+#ifndef MS_UNBINDABLE
+#define MS_UNBINDABLE (1 << 17)
+#endif
+
 /* This sould be enough for at least 20 host aliases */
 #define HOST_ENT_BUF_SIZE	2048
 
diff --git a/lib/mounts.c b/lib/mounts.c
index 550445c..27cf08b 100644
--- a/lib/mounts.c
+++ b/lib/mounts.c
@@ -18,7 +18,6 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/ioctl.h>
-#include <sys/mount.h>
 #include <sys/wait.h>
 #include <ctype.h>
 #include <stdio.h>
@@ -46,6 +45,8 @@ static const char mnt_name_template[]      = "automount(pid%u)";
 static struct kernel_mod_version kver = {0, 0};
 static const char kver_options_template[]  = "fd=%d,pgrp=%u,minproto=3,maxproto=5";
 
+unsigned long mountflags = MS_UNBINDABLE|MS_MGC_VAL;
+
 unsigned int linux_version_code(void)
 {
 	struct utsname my_utsname;
@@ -102,11 +103,14 @@ unsigned int query_kproto_ver(void)
 		return 0;
 	}
 
-	if (mount("automount", t_dir, "autofs", MS_MGC_VAL, options)) {
-		close(pipefd[0]);
-		close(pipefd[1]);
-		rmdir(t_dir);
-		return 0;
+	if (mount("automount", t_dir, "autofs", mountflags, options)) {
+		mountflags &= ~MS_UNBINDABLE;
+		if (mount("automount", t_dir, "autofs", mountflags, options)) {
+			close(pipefd[0]);
+			close(pipefd[1]);
+			rmdir(t_dir);
+			return 0;
+		}
 	}
 
 	close(pipefd[1]);
diff --git a/modules/parse_sun.c b/modules/parse_sun.c
index ae1caf7..d75e117 100644
--- a/modules/parse_sun.c
+++ b/modules/parse_sun.c
@@ -29,7 +29,6 @@
 #include <sys/vfs.h>
 #include <sys/utsname.h>
 #include <netinet/in.h>
-#include <sys/mount.h>
 #include <linux/fs.h>
 
 #define MODULE_PARSE
