diff -Nur autofs4-2.4.20.orig/fs/autofs4/autofs_i.h autofs4-2.4.20.deadlock/fs/autofs4/autofs_i.h
--- autofs4-2.4.20.orig/fs/autofs4/autofs_i.h	2002-08-03 08:39:45.000000000 +0800
+++ autofs4-2.4.20.deadlock/fs/autofs4/autofs_i.h	2003-09-28 17:03:06.000000000 +0800
@@ -73,6 +73,7 @@
 struct autofs_wait_queue {
 	wait_queue_head_t queue;
 	struct autofs_wait_queue *next;
+	struct task_struct *owner;
 	autofs_wqt_t wait_queue_token;
 	/* We use the following to see what we are waiting for */
 	int hash;
diff -Nur autofs4-2.4.20.orig/fs/autofs4/root.c autofs4-2.4.20.deadlock/fs/autofs4/root.c
--- autofs4-2.4.20.orig/fs/autofs4/root.c	2002-08-03 08:39:45.000000000 +0800
+++ autofs4-2.4.20.deadlock/fs/autofs4/root.c	2003-09-28 16:58:08.000000000 +0800
@@ -124,6 +124,7 @@
 	    list_empty(&dentry->d_subdirs)) {
 		DPRINTK(("try_to_fill_entry: mounting existing dir\n"));
 		spin_unlock(&dcache_lock);
+		dentry->d_flags |= DCACHE_AUTOFS_PENDING;
 		return autofs4_wait(sbi, &dentry->d_name, NFY_MOUNT) == 0;
 	}
 	spin_unlock(&dcache_lock);
diff -Nur autofs4-2.4.20.orig/fs/autofs4/waitq.c autofs4-2.4.20.deadlock/fs/autofs4/waitq.c
--- autofs4-2.4.20.orig/fs/autofs4/waitq.c	2003-09-28 17:14:00.000000000 +0800
+++ autofs4-2.4.20.deadlock/fs/autofs4/waitq.c	2003-09-28 17:15:28.000000000 +0800
@@ -160,6 +160,7 @@
 		if (++autofs4_next_wait_queue == 0)
 			autofs4_next_wait_queue = 1;
 		init_waitqueue_head(&wq->queue);
+		wq->owner = current;
 		wq->hash = name->hash;
 		wq->len = name->len;
 		wq->status = -EINTR; /* Status return if interrupted */
@@ -204,7 +205,12 @@
 		recalc_sigpending(current);
 		spin_unlock_irqrestore(&current->sigmask_lock, irqflags);
 
-		interruptible_sleep_on(&wq->queue);
+		wait_event_interruptible(wq->queue, wq->name == NULL);
+
+		if (waitqueue_active(&wq->queue) && current != wq->owner) {
+			set_current_state(TASK_INTERRUPTIBLE);
+			schedule_timeout(HZ/10);
+		}
 
 		spin_lock_irqsave(&current->sigmask_lock, irqflags);
 		current->blocked = oldset;
@@ -243,7 +249,7 @@
 	if (--wq->wait_ctr == 0)	/* Is anyone still waiting for this guy? */
 		kfree(wq);
 	else
-		wake_up(&wq->queue);
+		wake_up_interruptible(&wq->queue);
 
 	return 0;
 }
