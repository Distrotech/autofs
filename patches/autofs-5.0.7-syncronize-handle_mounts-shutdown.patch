Bottom: f150652ca82a5866f82c590caaa5312f4a3a62bf
Top:    c0dc31e53f32abe725e79fadc071bf075440cf20
Author: Ian Kent <ikent@redhat.com>
Date:   2013-04-04 12:56:54 +0800

autofs-5.0.7 - syncronize handle_mounts() shutdown


---

diff --git a/daemon/automount.c b/daemon/automount.c
index 4c651cf..92e1895 100644
--- a/daemon/automount.c
+++ b/daemon/automount.c
@@ -85,8 +85,11 @@ pthread_attr_t th_attr_detached;
 struct master_readmap_cond mrc = {
 	PTHREAD_MUTEX_INITIALIZER, PTHREAD_COND_INITIALIZER, 0, NULL, 0, 0, 0, 0};
 
-struct startup_cond suc = {
-	PTHREAD_MUTEX_INITIALIZER, PTHREAD_COND_INITIALIZER, 0, 0};
+/*struct startup_cond suc = {
+	PTHREAD_MUTEX_INITIALIZER, PTHREAD_COND_INITIALIZER, 0, 0};*/
+
+struct shutdown_cond sdc = {
+	PTHREAD_MUTEX_INITIALIZER, PTHREAD_COND_INITIALIZER, 0, 0, 0};
 
 pthread_key_t key_thread_stdenv_vars;
 
@@ -1338,6 +1341,10 @@ static void *statemachine(void *arg)
 		sigwait(&signalset, &sig);
 
 		switch (sig) {
+		case SIGCONT:
+			master_done(master_list);
+			break;
+
 		case SIGTERM:
 		case SIGINT:
 		case SIGUSR2:
@@ -1493,15 +1500,42 @@ static void handle_mounts_cleanup(void *arg)
 
 	info(logopt, "shut down path %s", path);
 
+	master_mutex_unlock();
+
 	/*
 	 * If we are not a submount send a signal to the signal handler
 	 * so it can join with any completed handle_mounts() threads and
 	 * perform final cleanup.
 	 */
-	if (!submount)
-		pthread_kill(state_mach_thid, SIGTERM);
+	if (!submount) {
+		int status, cancel_state;
+
+		pthread_setcancelstate(PTHREAD_CANCEL_DISABLE, &cancel_state);
+
+		status = pthread_mutex_lock(&sdc.mutex);
+		if (status) {
+			logerr("failed to lock shutdown condition mutex!");
+			fatal(status);
+		}
+
+		sdc.busy++;
+
+		/* Wake up signal handler */
+		pthread_kill(state_mach_thid, SIGCONT);
+
+		status = pthread_cond_wait(&sdc.cond, &sdc.mutex);
+		if (status)
+			fatal(status);
+
+		status = pthread_mutex_unlock(&sdc.mutex);
+		if (status) {
+			logerr("failed to unlock shutdown condition mutex!");
+			fatal(status);
+		}
+
+		pthread_setcancelstate(cancel_state, NULL);
+	}
 
-	master_mutex_unlock();
 
 	return;
 }
diff --git a/include/automount.h b/include/automount.h
index e72fa0d..cb16438 100644
--- a/include/automount.h
+++ b/include/automount.h
@@ -353,6 +353,16 @@ struct startup_cond {
 int handle_mounts_startup_cond_init(struct startup_cond *suc);
 void handle_mounts_startup_cond_destroy(void *arg);
 
+struct shutdown_cond {
+	pthread_mutex_t mutex;
+	pthread_cond_t  cond;
+	struct autofs_point *ap;
+	unsigned int busy;
+	unsigned int done;
+};
+
+extern struct shutdown_cond sdc;
+
 struct master_readmap_cond {
 	pthread_mutex_t mutex;
 	pthread_cond_t  cond;
