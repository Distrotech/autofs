Bottom: 676a245422a93f850b73eb5f53bedcbf869be122
Top:    00b49578e6c89b36d490a5c4cae7a71b9e84d88f
Author: Ian Kent <raven@themaw.net>
Date:   2013-06-07 13:54:07 +0800

autofs-5.0.7 - fix potential null dereference in lookup_mount()

Updating a negative cache entry should always find an entry but the entry
lookup return isn't checked and probably should be.


---

diff --git a/modules/lookup_file.c b/modules/lookup_file.c
index 2836996..48f5789 100644
--- a/modules/lookup_file.c
+++ b/modules/lookup_file.c
@@ -1139,7 +1139,8 @@ do_cache_lookup:
 			rv = cache_update(mc, source, key, NULL, now);
 		if (rv != CHE_FAIL) {
 			me = cache_lookup_distinct(mc, key);
-			me->status = now + ap->negative_timeout;
+			if (me)
+				me->status = now + ap->negative_timeout;
 		}
 		cache_unlock(mc);
 		return NSS_STATUS_TRYAGAIN;
diff --git a/modules/lookup_ldap.c b/modules/lookup_ldap.c
index a59de92..d89c295 100644
--- a/modules/lookup_ldap.c
+++ b/modules/lookup_ldap.c
@@ -3012,7 +3012,7 @@ int lookup_mount(struct autofs_point *ap, const char *name, int name_len, void *
 				       mapent, ctxt->parse->context);
 	if (ret) {
 		time_t now = time(NULL);
-		int rv = CHE_OK;
+		int rv = CHE_FAIL;
 
 		/* Record the the mount fail in the cache */
 		cache_writelock(mc);
diff --git a/modules/lookup_sss.c b/modules/lookup_sss.c
index 5c2ed0a..013d3b4 100644
--- a/modules/lookup_sss.c
+++ b/modules/lookup_sss.c
@@ -673,7 +673,7 @@ int lookup_mount(struct autofs_point *ap, const char *name, int name_len, void *
 				       mapent, ctxt->parse->context);
 	if (ret) {
 		time_t now = time(NULL);
-		int rv = CHE_OK;
+		int rv = CHE_FAIL;
 
 		/* Record the the mount fail in the cache */
 		cache_writelock(mc);
diff --git a/modules/lookup_yp.c b/modules/lookup_yp.c
index a716e1f..72a8baa 100644
--- a/modules/lookup_yp.c
+++ b/modules/lookup_yp.c
@@ -699,7 +699,7 @@ int lookup_mount(struct autofs_point *ap, const char *name, int name_len, void *
 					       mapent, ctxt->parse->context);
 		if (ret) {
 			time_t now = time(NULL);
-			int rv = CHE_OK;
+			int rv = CHE_FAIL;
 
 			cache_writelock(mc);
 			me = cache_lookup_distinct(mc, key);
